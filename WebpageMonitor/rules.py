#Rules

#Checks whether cpu utilisation of data passed is suspiciously high
class CPUPercentageCheck():

    def __init__(self):
        pass

    def check(cpuMonitoringData):
        metOnce = False

        for x in cpuMonitoringData[1:len(cpuMonitoringData)]:
            if(float(x[1]) >= 60):
                #print("greater than or equal to 60% cpu utilisation")
                metOnce = True
            else:
                #print("less 60")
                metOnce = False
        return metOnce


#Checks whether memory consumption of data passed is suspiciously high
class MemoryUsageCheck():

    def __init__(self):
        pass

    def check(memoryMonitoringData):
        for x in memoryMonitoringData[1:len(memoryMonitoringData)]:
            if(float(x[1]) >= 2):
                return True
            else:
                return False
