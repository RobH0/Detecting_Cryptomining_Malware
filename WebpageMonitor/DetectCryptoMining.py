#DetectCryptoMining
from generalMonitoring import SystemMonitoring
from MatchRules import *
from gui import *



class DetectCryptoMining:
    def __init__(self):
        self.systemMon = SystemMonitoring()
        self.defAndCall = DefineAndCall()
        self.gui = GUI(self)
        self.gui.mainGUI()

    def main(self):
        """for i in range(4):
            print("\n"+str(i))
            print(self.systemMon.monitorCpuUsage(1))
            print(self.systemMon.monitorMemoryUsage())"""

        rulesMet = []
        configFile = self.defAndCall.readRuleConfiguration('configuration.yaml')
        cpuData = self.systemMon.monitorCpuUsage(1)
        memoryData = self.systemMon.monitorMemoryUsage()

        cpuMatches = self.defAndCall.determineRelevantRule(cpuData, configFile)
        memoryMatches = self.defAndCall.determineRelevantRule(memoryData, configFile)


        rulesMet = cpuMatches + memoryMatches

        if len(rulesMet) != 0:
            self.gui.notifyUserOfActivity(rulesMet)
        else:
            print("No rules were met at this instance.")


if __name__ == '__main__':
    mainProg = DetectCryptoMining()
    #mainProg.main()
