import psutil

#Responsible for all general system monitoring
class SystemMonitoring:
    def __init__(self):
        processCPUData = []
        processMemoryData = []
        allProcessesMonitoringData = {}
        allProcMem = {}

    #Returns a list of tuples containing the processes name and the percentage
    #of cpu it is utilising in the format (name, cpuPercentage)
    def monitorCpuUsage(self, intervalTime):
        self.allProcessesMonitoringData = {}

        for pro in psutil.process_iter():
            self.processCPUData = ["CPU"]

            temp = (pro.name(), pro.cpu_percent(interval = intervalTime))
            print(temp)
            if temp[1] != 0:
                self.processCPUData.append(temp[1])
                self.allProcessesMonitoringData[temp[0]] = self.processCPUData
        print(self.allProcessesMonitoringData)
        return self.allProcessesMonitoringData
        """try:
            for pro in psutil.process_iter():
                processCPUData = ["CPU"]
                print(pro.name()+ ": " +str(pro.cpu_percent(interval=1)) + "%")
                temp = (pro.name(), pro.cpu_percent(interval = intervalTime))
                if temp[1] != 0:
                    self.processCPUData.append(temp)
                    self.allProcessesMonitoringData[pro.name()] = self.processCPUData
            print(self.allProcessesMonitoringData)
            return self.allProcessesMonitoringData

        except:
            print("No processes where found (CPU)")"""

    #Returns a list of tuples containing process name and the percentage of
    #memory being utilised by chrome processes
    def monitorMemoryUsage(self):
        self.allProcMem = {}

        for pro in psutil.process_iter():
            self.processMemoryData = ["Mem"]
            temp = (pro.name(), pro.memory_percent())
            if temp[1] > 1:
                self.processMemoryData.append(temp[1])
                self.allProcMem[temp[0]] = self.processMemoryData
        print(self.allProcMem)
        return self.allProcMem


        """self.chromeMemoryData = []
        self.chromeMemoryData.append("Mem")
        try:
            for pro in psutil.process_iter():
                if pro.name() == 'chrome.exe':
                    temp = (pro.name(), pro.memory_percent())
                    if temp[1] != 0:
                        self.chromeMemoryData.append(temp)
            print(self.chromeMemoryData)
            return self.chromeMemoryData
        except:
            print("No chrome processes where found (Memory)")"""

if __name__ == '__main__':
    SystemMon = SystemMonitoring()
    SystemMon.monitorCpuUsage(0.02)
    SystemMon.monitorMemoryUsage()
