#All pyqt thread classes
from PyQt5.QtCore import QThread, pyqtSignal, QRunnable, QObject
from DetectCryptoMining import *
from mitigations import *

# Class that enables monitoring and detection process to be initiated in a seperate
# thread from the gui's code execution.
class StartMonThread(QRunnable):
    def __init__(self, mainProgram):
        self.mainProg = mainProgram
        super(StartMonThread, self).__init__()
        self.signals = Signals()

    @pyqtSlot()
    def run(self):
        self.mainProg.main(self.signals)

class KillProcThread(QRunnable):
    def __init__(self, processName):
        self.mitigate = KillMiner
        print(processName)
        self.procName = processName
        super(KillProcThread, self).__init__()


    @pyqtSlot()
    def run(self):
        print(self.procName)
        self.mitigate.killMiningProcess(self, self.procName)

# Class defining pyqt signals.
class Signals(QObject):
    updateGUI = pyqtSignal(dict, dict)
