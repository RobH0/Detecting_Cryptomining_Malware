#gui.py
from PyQt5.QtWidgets import *
from PyQt5.QtCore import *
import threading
#from PyQtThreads import *


#Responsible for displaying and handling all actions of the gui
class GUI:

    def __init__(self, mainProgram):
        self.app = QApplication([])
        self.window = QWidget()
        self.layout = QVBoxLayout()
        self.alertLabel = QLabel("Crypto mining: not detected")
        self.label = None
        self.button = None
        self.stopMonButton = QPushButton('Stop monitoring')
        self.stopMonButton.setCheckable(True)
        self.mainProg = mainProgram
        self.threadpool = QThreadPool()

    def mainGUI(self):
        self.label = QLabel('DetectCryptoMining')
        self.button = QPushButton('Start monitoring')
        self.button.clicked.connect(self.startMonitoring)
        self.layout.addWidget(self.label)
        self.layout.addWidget(self.alertLabel)
        self.layout.addWidget(self.button)
        self.layout.addWidget(self.stopMonButton)
        self.window.setLayout(self.layout)
        self.window.show()
        self.app.exec_()

    #Updates gui to display rules that have ben met when mining activity is detected
    def notifyUserOfActivity(self, rulesMetDict):
        lenRuleList = len(rulesMetDict)
        index = 0
        alertString = "Crypto mining: Detected\n" + "The following detection rules were met: "
        for key in rulesMetDict:
            if index != (lenRuleList-1):
                alertString += key + ' ' + str(rulesMetDict[key]) + ", "
                index += 1
            else:
                alertString += key + ' ' + str(rulesMetDict[key]) + "."
        self.alertLabel.setText(alertString)

    #Starts the monitoring and detection process in a seperate pyqt thread to
    #prevent the gui from freezing.
    def startMonitoring(self):
        if self.stopMonButton.isChecked():
            self.stopMonButton.toggle()
        monThread = StartMonThread(self.mainProg)
        self.threadpool.start(monThread)

    #checks to see if the user wants to stop the monitoring for crypto-mining activity
    def checkStop(self):
        QCoreApplication.processEvents()
        if self.stopMonButton.isChecked():
            return True
        else:
            return False

    def toggleStopButton(self):
        self.stopMonButton.toggle()
