# finds and starts miner
import os
import win32api

class AutoMiner:

    def __init__(self):
        self.minerName = 'xmrig.exe'

    # Finds miner within windows file system.
    def findMiner(self):
        driveList = []
        # code modified from:
        # https://stackoverflow.com/questions/13067686/search-files-in-all-drives-using-python
        for drive in win32api.GetLogicalDriveStrings().split('\000')[:-1]:
            driveList.append(drive)

        # Iterates backwards through all possible drives since the program
        # assumes that the miners are within the decrypted container that is
        # mounted on a later drive (e.g. Z:\). This only improves speed if the
        # miners have not been moved out of the veracrypt container.
        for drive in reversed(driveList):
            for root, dirs, files in os.walk(drive):
                for file in files:
                    if file == self.minerName:
                        print("Miner executable found")
                        return os.path.join(root, file)

    # Starts the miner using the miner's path found by findMiner() while
    # providing the correct configuration input.
    def startMiner(self):
        minerPath = self.findMiner()
        try:
            os.system(minerPath + " --donate-level 1 -o pool.minexmr.com:443 -u 45gTQ52CRReD6HBCx9dQF4BWQeMSNDbjn55ZZpH6rSMEJZq5rdoL8UBKtP8YHmtCnZGQzxodrxWQAU1C5jQ48dEdTGnX24P -k --tls")
        except:
            print("No miner executable was found to be started for testing!")


if __name__ == '__main__':
    auto = AutoMiner()
    auto.startMiner()
